/*
 * Copyright 2021-2022, Seqera Labs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    // Apply the groovy plugin to add support for Groovy
    id 'groovy'
    id 'idea'
}

group = 'io.nextflow'
// DO NOT SET THE VERSION HERE
// THE VERSION FOR PLUGINS IS DEFINED IN THE `/resources/META-INF/MANIFEST.NF` file
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

idea {
    module.inheritOutputDirs = true
}

repositories {
    mavenCentral()
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://s3-eu-west-1.amazonaws.com/maven.seqera.io/releases' }
    maven { url = 'https://s3-eu-west-1.amazonaws.com/maven.seqera.io/snapshots' }
}

configurations {
    // see https://docs.gradle.org/4.1/userguide/dependency_management.html#sub:exclude_transitive_dependencies
    runtimeClasspath.exclude group: 'org.slf4j', module: 'slf4j-api'
}

sourceSets {
    main.java.srcDirs = []
    main.groovy.srcDirs = ['src/main']
    main.resources.srcDirs = ['src/resources']
    test.groovy.srcDirs = ['src/test']
    test.java.srcDirs = []
    test.resources.srcDirs = ['src/testResources']
}

dependencies {
    compileOnly project(':nextflow')
    compileOnly 'org.slf4j:slf4j-api:1.7.10'
    compileOnly 'org.pf4j:pf4j:3.4.1'

    testImplementation(testFixtures(project(":nextflow")))
    testImplementation project(':nextflow')
    testImplementation "org.codehaus.groovy:groovy:3.0.12"
    testImplementation "org.codehaus.groovy:groovy-nio:3.0.12"
    // see https://docs.gradle.org/4.1/userguide/dependency_management.html#sec:module_replacement
    modules {
        module("commons-logging:commons-logging") { replacedBy("org.slf4j:jcl-over-slf4j") }
    }
}

// use JUnit 5 platform
test {
    useJUnitPlatform()
}

import org.apache.commons.codec.digest.DigestUtils
task makeZip(type: Jar) {
    group 'nextflow'
    into('classes') { with jar }
    into('lib') { from configurations.runtimeClasspath }
    manifest.from file('src/resources/META-INF/MANIFEST.MF')
    archiveExtension = 'zip'
    preserveFileTimestamps = false
    reproducibleFileOrder = true
    archiveVersion = '0.0.0'
}
makeZip.doLast{
    if( file('build/libs/nf-plugin-template-0.0.0.zip').exists() )
        println "Hash: "+DigestUtils.sha512Hex(file('build/libs/nf-plugin-template-0.0.0.zip').bytes)
}