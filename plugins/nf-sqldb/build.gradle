/*
 * Copyright 2020-2022, Seqera Labs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'de.undercouch.download' version '4.1.2'
}

apply plugin: 'java'
apply plugin: 'java-test-fixtures'
apply plugin: 'idea'
apply plugin: 'groovy'


sourceSets {
    main.java.srcDirs = []
    main.groovy.srcDirs = ['src/main']
    main.resources.srcDirs = ['src/resources']
    test.groovy.srcDirs = ['src/test']
    test.java.srcDirs = []
    test.resources.srcDirs = []
}

configurations {
    // see https://docs.gradle.org/4.1/userguide/dependency_management.html#sub:exclude_transitive_dependencies
    runtimeClasspath.exclude group: 'org.slf4j', module: 'slf4j-api'
}

dependencies {
    compileOnly project(':nextflow')
    compileOnly 'org.slf4j:slf4j-api:1.7.10'
    compileOnly 'org.pf4j:pf4j:3.4.1'
    compileOnly "org.slf4j:log4j-over-slf4j:1.7.32"
    api("org.codehaus.groovy:groovy-sql:3.0.10") { transitive = false }
    api 'com.h2database:h2:1.4.200'
    api 'mysql:mysql-connector-java:8.0.22'
    api 'org.mariadb.jdbc:mariadb-java-client:2.7.0'
    api 'org.postgresql:postgresql:42.2.23'
    api 'org.xerial:sqlite-jdbc:3.36.0.3'
    api 'org.duckdb:duckdb_jdbc:0.3.0'
    api files('downloads/unzip/AthenaJDBC42_2.0.25.1001.jar')

    testImplementation(testFixtures(project(":nextflow")))
    testImplementation project(':nextflow')
    testImplementation "org.codehaus.groovy:groovy:3.0.10"
    testImplementation "org.codehaus.groovy:groovy-nio:3.0.10"
}


/**
 * The following tasks download and confirm the MD5 checksum of the ZIP archive
 * for Simba Athena JDBC driver and extract its contents to the build directory
 */
task downloadAthenDep(type: Download) {
    src 'https://s3.amazonaws.com/athena-downloads/drivers/JDBC/SimbaAthenaJDBC-2.0.25.1001/SimbaAthenaJDBC-2.0.25.1001.zip'
    dest new File(buildDir, 'downloads/SimbaAthenaJDBC-2.0.25.1001.zip')
    overwrite false
}

task verifyAthenDep(type: Verify, dependsOn: downloadAthenDep) {
    src new File(buildDir, 'downloads/SimbaAthenaJDBC-2.0.25.1001.zip')
    algorithm 'MD5'
    checksum '71504d0317656d790978363358d0c068'
}

task unzipAthenDep(dependsOn: verifyAthenDep, type: Copy) {
    from zipTree(new File(buildDir, 'downloads/SimbaAthenaJDBC-2.0.25.1001.zip'))
    into "${buildDir}/downloads/unzip"
}

project.compileGroovy.dependsOn('unzipAthenDep')
